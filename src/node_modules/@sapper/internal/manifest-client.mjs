// This file is generated by Sapper â€” do not edit it!
// webpack does not support export * as root_comp yet so do a two line import/export
import * as root_comp from '../../../routes/_layout.svelte';
export { root_comp };
export { default as ErrorComponent } from '../../../routes/_error.svelte';

export const ignore = [/^\/offer\.json$/, /^\/offer\/([^/]+?)\.json$/, /^\/blog\.json$/, /^\/blog\/([^/]+?)\.json$/];

export const components = [
	{
		js: () => import("../../../routes/index.svelte")
	},
	{
		js: () => import("../../../routes/profile.svelte")
	},
	{
		js: () => import("../../../routes/about.svelte")
	},
	{
		js: () => import("../../../routes/offer/index.svelte")
	},
	{
		js: () => import("../../../routes/offer/[id].svelte")
	},
	{
		js: () => import("../../../routes/blog/index.svelte")
	},
	{
		js: () => import("../../../routes/blog/[slug].svelte")
	},
	{
		js: () => import("../../../routes/faq.svelte")
	},
	{
		js: () => import("../../../routes/why.svelte")
	}
];

export const routes = (d => [
	{
		// index.svelte
		pattern: /^\/$/,
		parts: [
			{ i: 0 }
		]
	},

	{
		// profile.svelte
		pattern: /^\/profile\/?$/,
		parts: [
			{ i: 1 }
		]
	},

	{
		// about.svelte
		pattern: /^\/about\/?$/,
		parts: [
			{ i: 2 }
		]
	},

	{
		// offer/index.svelte
		pattern: /^\/offer\/?$/,
		parts: [
			{ i: 3 }
		]
	},

	{
		// offer/[id].svelte
		pattern: /^\/offer\/([^/]+?)\/?$/,
		parts: [
			null,
			{ i: 4, params: match => ({ id: d(match[1]) }) }
		]
	},

	{
		// blog/index.svelte
		pattern: /^\/blog\/?$/,
		parts: [
			{ i: 5 }
		]
	},

	{
		// blog/[slug].svelte
		pattern: /^\/blog\/([^/]+?)\/?$/,
		parts: [
			null,
			{ i: 6, params: match => ({ slug: d(match[1]) }) }
		]
	},

	{
		// faq.svelte
		pattern: /^\/faq\/?$/,
		parts: [
			{ i: 7 }
		]
	},

	{
		// why.svelte
		pattern: /^\/why\/?$/,
		parts: [
			{ i: 8 }
		]
	}
])(decodeURIComponent);

if (typeof window !== 'undefined') {
	import("C:/Users/avdom/OneDrive/Documents/svelte-training-material/node_modules/sapper/sapper-dev-client.js").then(client => {
		client.connect(10000);
	});
}